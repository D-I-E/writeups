from RSAwienerHacker import *

e = 65326441199468453286318255077403579659791312164553127869260446442105779909064937488537560101781375987673235379770584320200902922242466357110710512224365096172037200923774406729082247857808967592679310852236885503191205805867846536002124193676637708886499398965506519247168289750006311551455779911863709319947

n = 106491733927966194442570111833195971964540708710920248828539833058388088046807126527055336225402088921783018876076946794272419044969606936676842530973101509230963945247110105556900247885580601951941082462702181710167276943785261576473507495128333901938830998211916498162015185298755857306262703571421288351501

a = 33622269493924708607616624997424398912036927135599622278786063601678887543600400094409392433011134767526461813770729744913267138041445567265417022865204844947994077429853354378479239765411140344806650450747715214836133182538012671115882981194344900010564346012743782146937616191257888190694561289344531933844

d = hack_RSA(e, n)

def mul(x, y, z):
    ret = 1
    while y > 0:
        if y & 1:
            ret = (ret * x) % z
        x = (x * x) % z
        y >>= 1
    return ret

str_map = map(ord, '00FFFFFFFFFFFFFFFF2E002F133EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3C5737624E474A404B03115F0E0B3546535A163849450D325D43612A1F282609274D083D5522440134562D480A0C421E30204C103F2B0729064F1733391B12193B05043A18516352151C5B1A251D212C545E506024025C58413631230F5914FF'.decode('hex'))

plain = str(mul(a, d, n))

ans = ''

for i in range(0, len(plain), 2):
    tmp = int(plain[i]+plain[i+1], 10)
    ans += chr(str_map.index(tmp))

print ans[::-1]